name: Ticker Add/Remove -> Rebuild data -> Upload to Supabase

on:
  issues:
    types: [opened, edited, reopened]

permissions:
  contents: write
  issues: write

jobs:
  handle:
    if: startsWith(github.event.issue.title, '[ADD]') || startsWith(github.event.issue.title, '[REMOVE]')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Parse action and ticker from issue title
        id: parse
        run: |
          title="${{ github.event.issue.title }}"
          echo "Title: $title"
          if [[ "$title" =~ ^\[(ADD|REMOVE)\][[:space:]]+(.+)$ ]]; then
            echo "ACTION=${BASH_REMATCH[1]}" >> $GITHUB_OUTPUT
            echo "TICKER=${BASH_REMATCH[2]}" >> $GITHUB_OUTPUT
          else
            echo "Invalid title. Use: [ADD] TICKER or [REMOVE] TICKER" >> $GITHUB_STEP_SUMMARY
            exit 1
          fi

      - name: Modify scripts/tickers.txt
        run: |
          file="scripts/tickers.txt"
          action="${{ steps.parse.outputs.ACTION }}"
          ticker="${{ steps.parse.outputs.TICKER }}"
          echo "Action=$action Ticker=$ticker"
          if [[ "$action" == "ADD" ]]; then
            if ! grep -Fxq "$ticker" "$file"; then
              echo "$ticker" >> "$file"
              echo "Added $ticker to $file"
            else
              echo "Ticker already present in $file"
            fi
          else
            if grep -Fxq "$ticker" "$file"; then
              grep -Fxv "$ticker" "$file" > "$file.tmp" && mv "$file.tmp" "$file"
              echo "Removed $ticker from $file"
            else
              echo "Ticker not found in $file"
            fi
          fi

      - name: Commit ticker change
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add scripts/tickers.txt
          if git diff --cached --quiet; then
            echo "No changes to commit"
          else
            git commit -m "chore(tickers): ${{ steps.parse.outputs.ACTION }} ${{ steps.parse.outputs.TICKER }}"
            git push
          fi

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install yfinance pandas requests feedparser vaderSentiment certifi

      - name: Run data build (uses Polygon when available)
        env:
          USE_POLYGON: '1'
          POLYGON_API_KEY: ${{ secrets.POLYGON_API_KEY }}
        run: |
          python scripts/fetch_compute.py

      - name: Upload JSON to Supabase Storage (upsert)
        env:
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_SERVICE_ROLE: ${{ secrets.SUPABASE_SERVICE_ROLE }}
          SUPABASE_BUCKET: ${{ secrets.SUPABASE_BUCKET }}
        run: |
          python - << 'PY'
          import os, glob, requests, sys
          url=os.environ['SUPABASE_URL']
          key=os.environ['SUPABASE_SERVICE_ROLE']
          bucket=os.getenv('SUPABASE_BUCKET','stockdash')
          headers={'Authorization': f'Bearer {key}', 'Content-Type':'application/json','x-upsert':'true'}
          for path in glob.glob('data/*.json'):
              name=os.path.basename(path)
              with open(path,'rb') as f:
                  r=requests.post(f"{url}/storage/v1/object/{bucket}/{name}", headers=headers, data=f.read())
                  if r.status_code >= 300:
                      print("Upload failed:", name, r.status_code, r.text); sys.exit(1)
                  else:
                      print("Uploaded", name)
          PY

      - name: Delete removed ticker file in Supabase (if applicable)
        if: ${{ steps.parse.outputs.ACTION == 'REMOVE' }}
        env:
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_SERVICE_ROLE: ${{ secrets.SUPABASE_SERVICE_ROLE }}
          SUPABASE_BUCKET: ${{ secrets.SUPABASE_BUCKET }}
          TICKER: ${{ steps.parse.outputs.TICKER }}
        run: |
          python - << 'PY'
          import os, requests, re
          url=os.environ['SUPABASE_URL']
          key=os.environ['SUPABASE_SERVICE_ROLE']
          bucket=os.getenv('SUPABASE_BUCKET','stockdash')
          ticker=os.environ['TICKER']
          file=re.sub(r"\s+","_", ticker)+".json"
          r=requests.delete(f"{url}/storage/v1/object/{bucket}/{file}", headers={'Authorization': f'Bearer {key}'})
          print("Delete", file, r.status_code, r.text if r.status_code>=300 else "")
          PY

      - name: Comment and close issue
        uses: actions/github-script@v7
        with:
          script: |
            const action = core.getInput('action') || '${{ steps.parse.outputs.ACTION }}';
            const ticker = core.getInput('ticker') || '${{ steps.parse.outputs.TICKER }}';
            const body = `âœ… ${action} ${ticker}: Data rebuilt and uploaded to Supabase.`;
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body,
            });
            await github.rest.issues.update({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              state: 'closed'
            });

